@use './base';
@use './slider';
@use './switch';
@use './radio';
@use './variables' as v;

// $chevron: url('../images/iconmonstr-angel-down-thin.svg');
$chevron: url('../images/iconmonstr-arrow-65.svg');

h1 {
	text-align: center;
	margin: 2rem 0 3rem;
	font-size: v.$font-xl;
}

main {
	margin: auto;
	height: 100%;
	display: flex;
	flex-direction: column;
}

form {
	display: flex;
	flex-wrap: wrap;
}

.form-group {
	border-bottom: v.$border;
}

.no-border {
	border: 0;
}

.form-group {
	width: 100%;
	padding-bottom: 1rem;
	margin-bottom: 1.2rem;
	display: flex;
	flex-wrap: wrap;

	& label {
		width: 100%;
	}
}

.columns-2 {
	width: 50%;
}

label {
	color: v.$text-secondary;
	font-size: v.$font-s;
}

select,
input {
	background: none;
	padding: v.$padding-m 0;
}

option {
	background: v.$bg-primary;
}

.eqType-wrapper {
	display: flex;
	flex-wrap: wrap;
	padding-top: 1rem;
	& label {
		font-size: v.$font-m;
		color: v.$text-primary;
		flex-grow: 1;
		padding-left: 1rem;
	}
}

.radio-wrapper {
	width: 50%;
	display: flex;
	align-items: center;
}

select {
	width: 100%;
}

.level-wrapper {
	display: flex;
	align-items: center;
	width: 100%;

	input[type='number'] {
		width: 15%;
	}
	input[type='range'] {
		flex-grow: 1;
	}
}
input[type='number'] {
	-moz-appearance: textfield;
}
section {
	margin: auto;
}

.section-top {
	max-width: v.$width-top;
	padding: 0 1rem;
}
.section-result {
	background: v.$bg-secondary;
	width: 100%;
	flex-grow: 1;
}
.section-result-content-wrapper {
	max-width: v.$width-result;
	padding: 0 1rem 7rem;
	margin: auto;
}

.infectedLevel-wrapper2 {
	display: flex;
	justify-content: space-between;
	align-items: center;
	width: 100%;
}

.infectedLevelSmall-text {
	padding: 0.3rem 0;
	color: v.$text-secondary;
	font-size: v.$font-s;
	width: 70%;
}

.infectedLevelRight {
	white-space: nowrap;
	padding-left: 3rem;
}

#infectedLevel-xp:after {
	content: 'xp';
	color: v.$text-secondary;
	font-size: v.$font-s;
	margin-left: 0.4rem;
}

.result {
	&-outer-wrapper {
		margin-bottom: v.$padding-m;
	}

	&-wrapper {
		border-bottom: 1px solid v.$fg-primary;
		padding: v.$padding-m 0;
	}

	&-attribute-wrapper {
		display: flex;
		justify-content: space-between;
		align-items: center;
		padding: v.$padding-s 0;
	}

	&-label {
		color: v.$fg-primary;
		font-size: v.$font-s;
	}

	&-title {
		font-style: italic;
	}

	&-value {
		color: v.$fg-primary;
		font-size: v.$font-l;
		&:before {
			content: '+';
		}
	}
}

.detail {
	&-wrapper {
		border-bottom: v.$border;
		display: flex;
		justify-content: space-between;
		padding: 0.8rem 0 0.2rem;
		font-size: v.$font-s;
	}
	&-title {
		color: v.$text-secondary;
	}
	&-value {
		color: v.$text-primary;
		&:before {
			content: '+';
		}
	}
}

// input[type='range'] {
//   width: 100%;
//   height: 1.4rem;
//   padding: 0;
//   background-color: v.$text-secondary;
//   -webkit-appearance: none;
//   -moz-appearance: none;
//   appearance: none;
// }

/* ------------------------ */

.center {
	display: flex;
	justify-content: center;
	text-align: center;
}

input,
select,
label {
	cursor: pointer;
}

select {
	-webkit-appearance: none;
	appearance: none;
}
.custom-select {
	position: relative;
	width: 100%;
}
.custom-arrow {
	background-image: $chevron;
	background-repeat: no-repeat;
	background-position: center;
	width: 4rem;
	height: 100%;
	position: absolute;
	right: 0;
	top: 0;
	transform: scale(0.7);
	pointer-events: none;
}

.infectedOuterWrapper.disabled {
	opacity: 0.4;
	pointer-events: none;
	transition: opacity 0.2s;
}

.refinementLevelNote {
	font-size: v.$font-s;
	color: v.$text-warning;
}

.collapsible,
.collapsible2 {
	overflow: hidden;
	transition: height 0.2s ease-out;
	height: auto;
}

.links {
	margin-top: 40px;
	& ul {
		padding-left: 35px;
	}
	& li {
		height: 25px;
		margin-bottom: 1rem;
	}
	& a {
		color: white;
		height: 25px;
		&:hover {
			color: darken(white, 25);
		}
	}
	& img {
		height: 100%;
		padding-right: 0.7rem;
		vertical-align: middle;
	}
}

.accordion__button {
	background: none;
	color: v.$text-secondary;
	width: 100%;
	height: 3rem;
	outline: none;
	cursor: pointer;
	display: block;
	text-align: right;
	position: relative;

	&:hover {
		color: v.$text-primary;
	}

	&:before {
		content: '';
		position: absolute;
		left: 0;
		top: 50%;
		width: 73%;
		height: 1px;
		background: currentColor;
	}
	&:after {
		content: '\2039';
		font-size: 2rem;
		$size: 0.6rem;
		position: absolute;
		left: 76%;
		top: 50%;
		transform: translateY(-50%) rotate(-90deg);
	}

	&--active:after {
		content: '\203A';
		transform: translateY(-50%) rotate(-90deg);
	}
}

.accordion__content {
	overflow: hidden;
	max-height: 0;
	transition: max-height 0.2s;
}
